openapi: 3.0.0
info:
  title: User API
  description: API for managing users (Create, Read, Update, Delete)
  version: 1.0.0

servers:
  - url: http://localhost:3000

paths:
  /:
    get:
      summary: Get all users or filter by name
      description: Returns all users if no `name` query parameter is provided, otherwise returns the matching user.
      parameters:
        - name: name
          in: query
          required: false
          description: Name of the user to search (optional)
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "404":
          description: No users found
  /user:
    get:
      summary: Get user by name
      description: Returns  the matching user.
      parameters:
        - name: name
          in: query
          required: true
          description: Name of the user to search 
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "404":
          description: No users found

    post:
      summary: Create a new user
      description: Adds a new user to the list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid input

  /users/{name}:
    put:
      summary: Update user details
      description: Updates an existing user's age
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                age:
                  type: integer
      responses:
        "200":
          description: User updated successfully
        "404":
          description: User not found

    delete:
      summary: Delete a user
      description: Removes a user by name
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the user to delete
          schema:
            type: string
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
